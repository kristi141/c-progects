/*Условие:
В одной из горных долин под ясным и чистым небом располагалось небольшое 
озеро. На водной глади озера в ряд плавали несколько кувшинок. На каждой 
кувшинке существовало некоторое количество волшебной травы. А на самой первой 
кувшинке сидел кузнечик. Как известно, кузнечики в той долине очень любят 
питаться волшебной травой. Но наш кузнечик может перемещаться вдоль кувшинок 
только в одну сторону. Кроме этого, он может перепрыгивать за раз либо через 
одну кувшинку, либо через две. Каждый раз, когда кузнечик оказывается на 
кувшинке, он забирает себе всю траву с неё. Цель кузнечика – собрать как 
можно больше травы. Вам известно, сколько кувшинок было на озере и сколько 
травы было на каждой кувшинке. Напишите программу, которая по этим данным 
выведет, какое максимальное количество волшебной травы может собрать 
кузнечик, добравшись до последней кувшинки.

Входные данные:
Первая строка входного файла содержит единственное число N – количество 
кувшинок (0 ≤ N ≤ 105).
Во второй строке находятся N чисел, где каждое число Ti равно количеству 
травы на i-той кувшинке (-109 ≤ Ti ≤ 109).

Выходные данные:
В выходной файл необходимо вывести суммарное количество травы, которое может 
собрать кузнечик, перепрыгивая через одну или через две кувшинки 
только вправо.*/

#include <iostream>
#include <climits>
using namespace std;

long long trajectory(long long* grass, long long numberLilies)
{
	if (numberLilies == 1) {
		return grass[0];
	}
	else if (numberLilies == 2) {
		return 0;
	}
	else {
		grass[0] = grass[0];
		grass[1] = -INT_MAX;
		grass[2] = grass[0] + grass[2];

		for (int i = 3; i <= numberLilies; i++)
		{
			grass[i] += max(grass[i - 2], grass[i - 3]);
		}

		return grass[numberLilies - 1];
	}
}

int main()
{
	long long numberLilies;
	cin >> numberLilies;
	long long* grass = new long long[numberLilies];

	for (long long i = 0; i < numberLilies; i++) {
		cin >> grass[i];
	}

	cout << trajectory(grass, numberLilies) << endl;

	return 0;
}