/*Условие:
В одной из горных долин под ясным и чистым небом располагалось небольшое 
озеро. На водной глади озера в ряд плавали несколько кувшинок. На каждой 
кувшинке существовало некоторое количество волшебной травы. А на самой первой 
кувшинке сидел кузнечик. Как известно, кузнечики в той долине очень любят 
питаться волшебной травой. Но наш кузнечик может перемещаться вдоль кувшинок 
только в одну сторону. Кроме этого, он может перепрыгивать за раз либо через 
одну кувшинку, либо через две. Каждый раз, когда кузнечик оказывается на 
кувшинке, он забирает себе всю траву с неё. Цель кузнечика – собрать как 
можно больше травы. Вам известно, сколько кувшинок было на озере и сколько 
травы было на каждой кувшинке. Напишите программу, которая по этим данным 
выведет, какое максимальное количество волшебной травы может собрать 
кузнечик, добравшись до последней кувшинки.

Входные данные:
Первая строка входного файла содержит единственное число N – 
количество кувшинок (0 ≤ N ≤ 105).
Во второй строке находятся N чисел, где каждое число Ti равно количеству 
травы на i-той кувшинке (-109 ≤ Ti ≤ 109).

Выходные данные:
В выходной файл необходимо вывести суммарное количество травы, которое 
может собрать кузнечик, перепрыгивая через одну или через две кувшинки 
только вправо.*/

#include <iostream>
#include <climits>
using namespace std;

long long trajectory(long long* a, long long N)
{
	if (N == 1) {
		return a[0];
	}
	else if (N == 2) {
		return 0;
	}
	else {
		a[0] = a[0];
		a[1] = -INT_MAX;
		a[2] = a[0] + a[2];

		for (int i = 3; i <= N; i++)
		{
			a[i] += max(a[i - 2], a[i - 3]);
		}

		return a[N - 1];
	}
}

int main()
{
	long long N;
	cin >> N;
	long long* a = new long long[N];

	for (long long i = 0; i < N; i++) {
		cin >> a[i];
	}

	cout << trajectory(a, N) << endl;

	return 0;
}